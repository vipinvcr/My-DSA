class Solution {
public:
    int countLargestGroup(int n) {
        int sum=0;
        int currentMaxSize=0;
        unordered_map<int, int> map;
        for(int i=1; i<=n; i++)
        {
            sum=calculateSum(i);
            map[sum]+=1;
            currentMaxSize=max(currentMaxSize, map[sum]);
        }
        int count=0;
        for(auto traverse: map)
        {
            if(traverse.second==currentMaxSize)
            {
                count++;
            }
        }
        return count;
    }
    
    int calculateSum(int num)
    {
        int sum=0;
        while(num>0)
        {
            sum=sum+(num%10);
            num=num/10;
        }
        return sum;
    }
};
