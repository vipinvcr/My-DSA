class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        vector<int> adj[n];
        for(auto it: edges)
        {
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
        }
        vector<int> vis(n, 0);
        return dfs(adj, n, source, destination, vis);
    }
    
    bool dfs(vector<int> adj[], int n, int source, int destination, vector<int>& vis)
    {
        if(source==destination)
            return true;
        
        vis[source]=1;
        for(auto it: adj[source])
        {
            if(vis[it]==0)
            {
                if(dfs(adj, n, it, destination, vis))
                {
                    return true;
                }
            }
        }
        return false;
    }
    
};
